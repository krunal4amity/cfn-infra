AWSTemplateFormatVersion: "2010-09-09"
Description: ElasticSearch template
#
#Condition: When creating a VPC domain, you must choose a subnet that uses either 10.x.x.x or 172.x.x.x for its CIDR block.
#Note: AWS::IAM::ServiceLinkedRole doesn't seem to work.
#Create a service linked role before hand using 'aws iam create-service-linked-role --aws-service-name es.amazonaws.com'
#Please refer to https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html
#If the env type is anything but prod, number of instance node will be always 3
#to allow encryption at rest and ebs, few instance family are not supported.
#---testing---
#---upload data
# curl -XPUT elasticsearch_domain_endpoint/movies/_doc/1 -d '{"director": "Burton, Tim", "genre": ["Comedy","Sci-Fi"], "year": 1996, "actor": ["Jack Nicholson","Pierce Brosnan","Sarah Jessica Parker"], "title": "Mars Attacks!"}' -H 'Content-Type: application/json'
#---verify data
# https://elasticsearch_domain_endpoint/_cat/indices?v
# https://elasticsearch_domain_endpoint/movies/_search?pretty=true&q=*:*

Parameters:
  S3Bucket:
    Type: String
  S3Prefix:
    Type: String
  StageName:
    Type: String

Conditions:
  IsProd: !Equals
    - !Ref "StageName"
    - prd

Resources:
  #  ESServiceLinkedRole: #todo this doesn't seem to work. Need to figure out.
  #    Type: 'AWS::IAM::ServiceLinkedRole'
  #    Properties:
  #      AWSServiceName: es.amazonaws.com
  #      Description: Role for ES to access resources in VPC

  IndexLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: "30" #retention period is currently 30 days.
      LogGroupName: !Sub "me/aes/domains/medataplatform-es-${StageName}/index-logs"

  SearchLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: "30"
      LogGroupName: !Sub "me/aes/domains/medataplatform-es-${StageName}/search-logs"

  AppLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: "30"
      LogGroupName: !Sub "me/aes/domains/medataplatform-es-${StageName}/application-logs"

  PublishLogOptionsFuncRole:
    Type: AWS::IAM::Role
    DependsOn:
      - IndexLog
      - AppLog
      - SearchLog
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: Stmt1568801387563
                Action:
                  - es:DescribeElasticsearchDomain
                  - es:DescribeElasticsearchDomainConfig
                  - es:UpdateElasticsearchDomainConfig
                  - es:DescribeElasticsearchDomains
                  - es:ListDomainNames
                Effect: Allow
                Resource: !GetAtt "ESDomain.DomainArn"
          PolicyName: !Sub "LambdaAccessToAESPolicy-${StageName}"
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: Stmt1568801387564
                Action:
                  - logs:DeleteResourcePolicy
                  - logs:PutResourcePolicy
                Effect: Allow
                Resource: "*"
          PolicyName: !Sub "LambdaAccessToCWLogsPolicy-${StageName}"
      RoleName: !Sub "PublishLogOptionsFuncRole-${StageName}"

  PublishLogOptionsFunc:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref "S3Bucket"
        S3Key: !Join
          - "/"
          - - !Ref "S3Prefix"
            - publishlogoptions.zip
      Handler: main
      Role: !GetAtt "PublishLogOptionsFuncRole.Arn"
      Runtime: go1.x
      Timeout: 20

  ElasticsearchSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "medataplatform-ES-${StageName}-SG"
      GroupDescription: security group to allow access to ElasticSearch domain
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0" #todo the IP range to allow all other aws accounts to be able to connect.
          FromPort: "443"
          IpProtocol: tcp
          ToPort: "443"
      VpcId: !Sub "{{resolve:ssm:/me/${StageName}/common/vpcid:1}}"
      Tags:
        - Key: Name
          Value: !Sub "medataplatform-ES-${StageName}-SG"

  #PublishLogOptions: A custom resource to enable publish logs options. The feature is not supported by Cloudformation
  #Takes 4 parameters:
  #DomainName: The name of the domain. Doesn't innclude prefix or suffix attached by aws e.g 'vpc-'
  #IndexSlowLogsArn: The ARN of the index cloudwatch logs group.
  #SearchSlowLogsArn: the arn of the search cloudwatch logs group.
  #ESApplicationLogsArn: the arn of the Application error cloudwatch logs group.
  PublishLogOptions:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - PublishLogOptionsFunc
    Properties:
      ServiceToken: !GetAtt "PublishLogOptionsFunc.Arn"
      DomainName: !Sub "medataplatform-es-${StageName}"
      IndexSlowLogsArn: !GetAtt "IndexLog.Arn"
      SearchSlowLogsArn: !GetAtt "SearchLog.Arn"
      ESApplicationLogsArn: !GetAtt "AppLog.Arn"

  AlertTopic:
    Type: AWS::SNS::Topic
    Condition: IsProd
    Properties:
      TopicName: !Sub "ESAlerts-${StageName}"

  ClusterStatusYellowAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Replica shards for at least one index are not allocated to nodes in a cluster."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "ClusterStatus.yellow"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ClusterStatusRedAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Primary and replica shards of at least one index are not allocated to nodes in a cluster."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "ClusterStatus.red"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ClusterCPUUtilizationTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average CPU utilization over last 10 minutes too high."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "CPUUtilization"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 80

  ClusterCPUCreditBalanceTooLowAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average CPU credit balance over last 10 minutes too low, expect a significant performance drop soon."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 20

  ClusterMasterCPUUtilizationTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average CPU utilization over last 10 minutes too high."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "MasterCPUUtilization"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 50

  ClusterMasterCPUCreditBalanceTooLowAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average CPU credit balance over last 10 minutes too low, expect a significant performance drop soon."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: MasterCPUCreditBalance
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 20

  ClusterFreeStorageSpaceTooLowAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Cluster is running out of storage space."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "FreeStorageSpace"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Minimum
      Threshold: 2000 # 2 Gigabyte in Megabyte

  ClusterIndexWritesBlockedTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Cluster is blocking incoming write requests."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "ClusterIndexWritesBlocked"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ClusterJVMMemoryPressureTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average JVM memory pressure over last 10 minutes too high."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "JVMMemoryPressure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 80

  ClusterMasterJVMMemoryPressureTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Average JVM memory pressure over last 10 minutes too high."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "MasterJVMMemoryPressure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 600
      Statistic: Average
      Threshold: 80

  ClusterMasterNotReachableFromNodeAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Master node stopped or not reachable. Usually the result of a network connectivity issue or AWS dependency problem."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "MasterReachableFromNode"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Minimum
      Threshold: 1

  ClusterAutomatedSnapshotFailureTooHighAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "No automated snapshot was taken for the domain in the previous 36 hours."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "AutomatedSnapshotFailure"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ClusterKibanaHealthyNodesTooLowAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "Kibana is inaccessible."
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "KibanaHealthyNodes"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Minimum
      Threshold: 1

  ClusterKMSKeyErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "KMS customer master key used to encrypt data at rest has been disabled."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "KMSKeyError"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ClusterKMSKeyInaccessibleAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsProd
    Properties:
      AlarmActions:
        - !Ref AlertTopic
      AlarmDescription: "KMS customer master key used to encrypt data at rest has been deleted or revoked its grants to Amazon ES."
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClientId
          Value: !Ref "AWS::AccountId"
        - Name: DomainName
          Value: !Ref ESDomain
      EvaluationPeriods: 1
      MetricName: "KMSKeyInaccessible"
      Namespace: "AWS/ES"
      OKActions:
        - !Ref AlertTopic
      Period: 60
      Statistic: Maximum
      Threshold: 0

  ESDomain: #this is a private Elasticsearch domain inside a vpc.
    Type: AWS::Elasticsearch::Domain
    Properties:
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - es:*
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:/domain/medataplatform-es-${StageName}/*"
      DomainName: !Sub "medataplatform-es-${StageName}" #cannot have uppercase laters in domainname.
      EBSOptions:
        EBSEnabled: "true"
        VolumeSize: !Sub "{{resolve:ssm:/me/${StageName}/es/esebsvolsize:1}}"
        VolumeType: gp2
      ElasticsearchClusterConfig:
        DedicatedMasterCount: "3" # number of masters are going to be 3 as per recommendation
        DedicatedMasterEnabled: "true"
        DedicatedMasterType: !Sub "{{resolve:ssm:/me/${StageName}/es/esmasterinstancetype:1}}"
        InstanceType: !Sub "{{resolve:ssm:/me/${StageName}/es/esinstancetype:1}}"
        ZoneAwarenessConfig:
          AvailabilityZoneCount: "3"
        ZoneAwarenessEnabled: "true"
        InstanceCount: !If
          - IsProd
          - !Sub "{{resolve:ssm:/me/${StageName}/es/esinstancecount:1}}"
          - "3"
      #      LogPublishingOption: #LogPublishingOptions was available from 09-Nov-19. Haven't tried yet.
      #        INDEX_SLOW_LOGS:
      #          CloudWatchLogsLogGroupArn: !GetAtt 'IndexLog.Arn'
      #          Enabled: true
      #        SEARCH_SLOW_LOGS:
      #          CloudWatchLogsLogGroupArn: !GetAtt 'SearchLog.Arn'
      #          Enabled: true
      #        ES_APPLICATION_LOGS:
      #          CloudWatchLogsLogGroupArn: !GetAtt 'AppLog.Arn'
      #          Enabled: true
      ElasticsearchVersion: !Sub "{{resolve:ssm:/me/${StageName}/es/esversion:1}}"
      EncryptionAtRestOptions:
        Enabled: "true"
      NodeToNodeEncryptionOptions:
        Enabled: "true"
      SnapshotOptions:
        AutomatedSnapshotStartHour: "0"
      VPCOptions:
        SecurityGroupIds:
          - !Ref "ElasticsearchSG"
        SubnetIds:
          - !Sub "{{resolve:ssm:/me/${StageName}/common/privatesubnetA:1}}"
          - !Sub "{{resolve:ssm:/me/${StageName}/common/privatesubnetB:1}}"
          - !Sub "{{resolve:ssm:/me/${StageName}/common/privatesubnetC:1}}"
      Tags:
        - Key: Name
          Value: !Sub "medataplatform-ES-${StageName}"

  ESRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Comment: "Master DB endpoint"
      HostedZoneId: !Sub "{{resolve:ssm:/me/${StageName}/common/privater53zoneid:1}}"
      TTL: 300
      ResourceRecords:
        - !GetAtt "ESDomain.DomainEndpoint"
      Name: !Join
        - ""
        - - medataplatform-es-
          - !Ref "StageName"
          - .
          - !Sub "{{resolve:ssm:/me/${StageName}/common/privater53domain:1}}"
      Type: CNAME
Outputs:
  DomainArn:
    Description: The arn of the domain
    Value: !GetAtt "ESDomain.DomainArn"
  DomainEndpoint:
    Description: vpc endpoint of the domain
    Value: !GetAtt "ESDomain.DomainEndpoint"
  ESHost:
    Description: Route53 recordset of the ES domain endpoint
    Value: !Ref ESRecordSet
